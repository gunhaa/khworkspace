<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 프로젝트 전반적으로 사용할 DB 연결 관련 내용(JDBC, DBCP, MyBatis), AOP, 트랜잭션 처리, 파일 업로드 
		등을 작성 -->

	<!--DBCP 사용을위한DataSource를Bean으로등록 -->
	<!--DataSource란? : java에서Connection Pool을지원하기위한인터페이스 -->
	<!--BasicDataSource: DataSource인터페이스를 구현한클래스, 아파치commons.dbcp에서제공 -->
	<!--destroy-method="close" : 주어진 세션을 자동으로 반환 (close)하라는 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="project" />
		<property name="password" value="project1234" />
		
		<!--defaultAutoCommit: SQL 수행후자동COMMIT 설정. (기본값: true) -->
		<property name="defaultAutoCommit" value="false" />
		<!--커넥션풀설정 -->
		<property name="initialSize" value="10" /><!--초기 커넥션수, 기본0 -->
		<property name="maxTotal" value="500" /> <!--최대 커넥션수, 기본8 -->
		<property name="maxIdle" value="100" /> <!--유휴 상태로 존재할 수 있는 커넥션 최대수, 기본8 -->
		<property name="minIdle" value="10" /> <!--유휴 상태로 존재할 수 있는 커넥션 최소수, 기본0 -->
		<property name="maxWaitMillis" value="-1" /><!--예외 발생 전 커넥션이 반환될 떄 까지 대기하는 최대시간(ms), 기본-1(무기한) -->
	</bean>

	<!--SqlSession : sql구문을 DB에 전달, 실행하는 객체 SqlSessionFactory : SqlSession을 만드는 객체 
		sqlSessionFactoryBean: mybatis설정파일(mybatis-config.xml)과 Connection Pool 정보를 이용하여 SqlSessionFactory를 만드는객체 
		sqlSessionTemplate : SqlSession객체에 트랜잭션 처리 역할이 가능하도록 하는 객체 -->
	<!--마이바티스 SqlSession 등록하기(xml 방식으로 bean 등록) -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--mybatis-config.xml 설정불러오기 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--SqlSessionTemplate: 기본SQL 실행+ 트랜잭션 관리 역할을 하는SqlSession을 생성할수있게 하는 객체(Spring bean으로등록해야함.) -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean" />
	</bean>
	<!--스프링에서 사용하는 proxy를 이용한 트랜잭션 제어가 안될경우 추가적인 트랜잭션 매니저를 추가해서 문제해결 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>



</beans>
