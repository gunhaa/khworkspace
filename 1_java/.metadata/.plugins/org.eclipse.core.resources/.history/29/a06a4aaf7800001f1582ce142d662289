package edu.kh.array.practice;

import java.util.Scanner;

public class ArrayPractice {

	public void pr1() {
		int[] arr;
		int sum=0;
		arr= new int[9];

		for(int i=0; i<arr.length;i++) {

			arr[i]=i+1;
			System.out.print(arr[i]+ " ");
			if(i%2 == 0) {
				sum+=arr[i];
			}

		}
		System.out.println("짝수 번째 인덱스의 합 :"+sum);
	}

	public void pr2() {
		int[] arr;
		int sum=0;
		arr=new int[9];
		for(int i=0; i<arr.length; i++) {
			arr[i]=9-i;
			System.out.print(arr[i]+ " ");
			if(i%2==1) {
				sum+=arr[i];
			}
		}
		System.out.print("\n 홀수 번째 인덱스 합 : "+ sum);

	}

	public void pr3() {
		Scanner sc= new Scanner(System.in);
		int[] arr;
		System.out.print("양의 정수 : ");
		int input=sc.nextInt();
		arr=new int[input];

		for(int i=0; i<input ; i++) {
			arr[i]=i+1;
			System.out.print(arr[i] + " ");
		}

	}

	public void pr4() {
		Scanner sc= new Scanner(System.in);

		System.out.print("입력 0 : ");
		int input0=sc.nextInt();
		System.out.print("입력 1 : ");
		int input1=sc.nextInt();		
		System.out.print("입력 2 : ");
		int input2=sc.nextInt();		
		System.out.print("입력 3 : ");
		int input3=sc.nextInt();		
		System.out.print("입력 4 : ");
		int input4=sc.nextInt();
		System.out.print("검색할 값 : ");
		int search=sc.nextInt();
		int index=0;
		boolean flag = false;

		int[] num = {input0, input1, input2, input3, input4};

		for(int i=0 ; i<num.length ; i++) {
			if(num[i]==search) {

				index++;
				flag = true;
			} 
		}


		if(flag==false) {
			System.out.print("일치하는 값이 존재하지 않습니다.");
		} else {
			System.out.print("인덱스 : "+index);
		}


	}

	public void practice5() {
		Scanner sc=new Scanner(System.in);
		System.out.print("문자열 : ");
		String str=sc.next();

		char[] ch=new char[str.length()];
		for(int i=0; i<str.length(); i++ ) {
			ch[i]=str.charAt(i) ;
		}

		System.out.print("문자 : ");
		char ch2=sc.next().charAt(0);

		int count=0;

		System.out.printf("%s에 %c가 존재하는 위치(인덱스) : ",str,ch2 );

		for(int i=0; i<str.length();i++ ) {
			if(ch[i]==ch2) {
				count++;
				System.out.print(i+" ");
			}

		}

		System.out.printf("\n%c 개수 : %d",ch2,count);
	}

	public void practice6() {

		Scanner sc = new Scanner(System.in);
		System.out.print("정수 : ");
		int input = sc.nextInt();

		int[] arr = new int[input];

		int sum = 0;

		String value = "";

		for(int i=0; i < arr.length; i++) {
			System.out.print("배열 "+i+"번째 인덱스에 넣을 값 : ");
			arr[i]=sc.nextInt();
			sum += arr[i];
			value += arr[i]+ " ";
		}

		System.out.println(value);

		System.out.println("총합 : "+sum);
	}

	public void practice7() {

		Scanner sc= new Scanner(System.in);

		System.out.print("주민 등록 번호 (-포함) : ");
		String input = sc.nextLine();

		char arr[] = new char[input.length()];

		for (int i=0 ; i<arr.length ; i++) {

			if(i<= 7) { // 번째 인덱스 이하

				arr[i]=input.charAt(i);

			} else { //8번 인덱스 이상부터는 *

				arr[i]='*';

			}


			System.out.print(arr[i]);
		}


	}

	/*public void practice8() {
		Scanner sc = new Scanner(System.in);

		while(true) { //3 이상의 홀수가 입력 될 때 까지 무한 반복
			// -> 3 이상 홀수가 입력되면 break문으로 종료

			System.out.print("정수 : ");
			int input= sc.nextInt();

			for(int %2 == 0 || input < 3 { //짝수 또는 3 미만인 경우 ->반복
				System.out.println("다시 입력하세요,:");

			} else {
				// 입력 받은 정수 만큼의 크기를 가지는 배열 생성
				int[] arr = new int[input];

				for(int i=0; i<arr.lenght; 1++) {
					if(i<= arr.length / 2) {//중간 이전까지-> 증가
						arr[i] = ++num;
					} else { // 중간 이후 -> 감소
						arr[i] = --num;
					}

					// 출력 시, 추가( 단, 마지막 제외)
					if(i == arr.lenght-1) {마지막 바퀴)
					} else P
					System.out.println(arr[i] + ",");



				}

			}

		}
	}
	 */

	public void practice9() {

		int[] arr = new int[10];

		System.out.print("발생한 난수 : ");

		for(int i=0; i<arr.length; i++) {
			arr[i] = (int)(Math.random()*10+1);

			System.out.print(arr[i] + " ");
		}
	}

	//  10개의 값을 저장할 수 있는 정수형 배열을 선언 및 할당하고,
	//   1~10 사이의 난수를 발생시켜 배열에 초기화 후
	//   배열 전체 값과 그 값 중에서 최대값과 최소값을 출력하세요.
	public void practice10() {

		int[] arr= new int[10];

		System.out.print("발생한 난수 : ");

		for(int i=0; i<arr.length; i++) {
			arr[i] = (int)(Math.random() * 10 + 1);
			System.out.print(arr[i] + " ");
		}

		int min = arr[0];
		int max = arr[0];

		for(int i=0; i<arr.length; i++) {

			if(max < arr[i]) {
				max = arr[i];

			} else if(min > arr[i]) {
				min = arr[i];
			}
		}
		System.out.println();
		System.out.println("최대값 : " + max);
		System.out.println("최소값 : " + min);
	}

	public void practice11() {

		int[] arr = new int[10];

		for(int i=0; i<arr.length; i++) {

			// 난수 생성 -> 대입(단, 중복 제거)
			arr[i] = (int)(Math.random() * 10 + 1); // 1~10 사이 난수

			//중복 확인 시 i값을 감소 시켜
			// 다음 반복에서 현재 인덱스에 난수를 덮어쓰기

			for(int x=0; x<i; x++) {

				if(arr[i] == arr[x]) {
					// 현재 생성된 난수가 앞서 대입된 난수와 같은 경우 == 중복

					i--; // i를 1 감소 시킴
					// 바깥쪽 for문 반복 시 i가 다시 1 증가
					// -1 + 1 == 0(제자리)

					break; // 중복을 찾게되면 더 이상 검사할 필요가 없음

				}
				System.out.print(arr[i] + " ");

			}

		} 

		// 출력
		for(int i=0 ; i<arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}
	public void practice12() {

		int[] arr = new int[6];
		for(int i = 1 ; i<48 ; i++) {
			
			arr[i] = (int)(Math.random() * 10 + 1);
			
			for(int x=0; x<i; x++) {
				
				if(arr[i] == arr[x]) {
					
					i--;
					
					break;
				}
				System.out.print(arr[i]);
				
			}
		}
	}
	
	
	
	
	public void practice14() {
		/*사용자가 입력한 배열의 길이만큼의 문자열 배열을 선언 및 할당하고            
		 * 배열의 인덱스에 넣을 값 역시 사용자가 입력하여 초기화하세요.
		 * 단, 사용자에게 배열에 값을 더 넣을지 물어보고 몇 개를 더 입력할 건지, 
		 * 늘린 곳에 어떤 데이터를 넣을 것인지 받으세요.
		 * 사용자가 더 이상 입력하지 않겠다고 하면 배열 전체 값을 출력하세요.
		 * 
		 * 예시
		 * [실행 화면]
		 * 배열의 크기를 입력하세요 : 
		 * 1번째 문자열
		 * 2번째 문자열
		 * 3번째 문자열
		 * 더 값을 입력하시겠습니까?(Y/N)
		 * 더 입력하고 싶은 개수 : 
		 * 4번째 문자열 : 
		 * 5번째 문자열 : 
		 * 더 값을 입력하시겠습니다?(Y/N) : 
		 * 더 입력하고 싶은 개수 : 
		 * 6번째 문자열 : 
		 * 더 값을 입력하시겠습니까 ?(Y/N) : 
		 * 
		 * 
		 * 
		 * 
		 * */

		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("배열의 크기를 입력하세요 : ");
		int size = sc.nextInt();
		sc.nextLine(); // 입력 버퍼 개행 문자 제거
		
		String[] arr = new String[size];
		
		while(true) {
			
			for(int i = 0; i<arr.length; i++) {
				System.out.print( (i+1) + "번째 문자열 : ");
				arr[i] = sc.nextLine();
				
			}
			
			System.out.print("더 값을 입력하시겠습니까?(Y/N) : ");
			char input = sc.next().charAt(0);
			
		}
			if(input == 'y' || input == 'Y') {
				
			} else {
				break;
				
		}
		
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("배열의 크기를 입력하세요: ");
        int size = scanner.nextInt();
        String[] arr = new String[size];
        
        for (int i = 0; i < size; i++) {
            System.out.print((i + 1) + "번째 문자열: ");
            arr[i] = scanner.next();
        }
        
        char inputMore = 'Y';
        while (inputMore == 'Y' || inputMore == 'y') {
            System.out.print("더 값을 입력하시겠습니까?(Y/N): ");
            inputMore = scanner.next().charAt(0);
            if (inputMore == 'Y' || inputMore == 'y') {
                System.out.print("더 입력하고 싶은 개수: ");
                int additional = scanner.nextInt();
                String[] newArr = new String[size + additional];
                System.arraycopy(arr, 0, newArr, 0, size);
                for (int i = size; i < size + additional; i++) {
                    System.out.print((i + 1) + "번째 문자열: ");
                    newArr[i] = scanner.next();
                }
                arr = newArr;
                size += additional;
            }
        }
        
        System.out.println("배열 전체 값:");
        for (int i = 0; i < size; i++) {
            System.out.println((i + 1) + "번째 문자열: " + arr[i]);
        }


		//배열의 인덱스에 넣을 값 역시 사용자가 입력하여 초기화하세요.


	}
}