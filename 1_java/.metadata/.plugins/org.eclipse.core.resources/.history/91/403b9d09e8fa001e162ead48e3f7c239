package edu.kh.op.ex;

import java.util.Scanner;

public class OpExample { // 예제 코드 작성용 클래스

	// ex1() 메소드
	// OpExample이 가지고 있는 기능 중 ex1()이라는 기능
	public void ex1() {
		
		// syso 작성 후 ctrl + space
		System.out.println("OpExample 클래스에 ex() 기능 수행");
		System.out.println("클래스 분리 테스트");
		System.out.println("println 자동완성~");
		
	}
	
	// ex2() 메소드(기능)
	public void ex2() {
		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("정수 입력 1 : ");
		int input1 = sc.nextInt(); // 다음 입력되는 정수를 읽어옴
		
		System.out.print("정수 입력 2 : ");
		int input2 = sc.nextInt();
	
		
		System.out.printf("%d / %d = %d\n", input1, input2, input1, input1 / input2);
		System.out.printf("%d %% %d = %d\n", input1, input2, input1, input1 % input2);
		
		
	}
	
	public void ex3() {
		// 증감(증가, 감소) 연산자 : ++, --
		// -> 피연산자(값)를 1 증가 또는 감소 시키는 연산자
		
		int iNum1 = 10;
		int iNum2 = 10;
		
		iNum1++; // iNum1 1 증가
		iNum2--; // iNum2 1 감소
		
		System.out.println("iNum1 : " + iNum1);
		System.out.println("iNum2 : " + iNum2);
		
		
		// 전위 연산 : ++3, --2 연산자가 앞쪽에 배치
		// - 다른 연산자보다 먼저 증가/감소
		int temp1 = 5;
		System.out.println(++temp1 + 5);
						// ++5 + 5 
						//  6  + 5 == 11
		
		System.out.println("temp1 : " + temp1); // 6
		
		// 후위 연산 : 10++, 6-- 연산자가 뒤쪽에 배치
		// - 다른 연산자보다 나중에 증가/감소
		
		int temp2 = 12;
		System.out.println(temp2-- + 3);
						// 12-- + 3 == 15
						// ㅅ드2 == 11; (1 감소)
		
		System.out.println("temp2 : " + temp2); // 11
		
		int a = 3;
		int b = 5;
		int c = a++ + --b;
		
		//     (a)3++ + --5(b)
		// c = (a)3++ + 4(b)
		// c = 7
		
		// 미뤄놨던 a 후위연산 a++ == 6++ == 3+1 == 4
		
		// 최종적으로 a, b, c는 각각 얼마인가?
		
		System.out.printf("%d / %d / %d\n", a, b, c);
		
	}
	
	public void ex4() {
		
		//비교 연산자 : >, <, >=, <=, ==, !=
		// - 비교 연산자의 결과는 항상 논리값(true / false)
		// - 등호(=)가 포함된 연산자에서 등호는 항상 오른쪽!
		
		// 같다 기호는 =, == 어떤 것?
		// -> ==
		// 왜? 등호 1개(=) 대입 연산자로 사용
		// --> 구분을 위해서 두개(==)를 "같다"라는 의미로 사용
		
		int a = 10;
		int b = 20;
		
		System.out.println( a > b ); // false
		System.out.println( a < b ); // true
		System.out.println( a != b ); // true
		System.out.println( a == b == false); // true
		
		System.out.println("--------------------------------------");
		
		int c = 4;
		int d = 5;
		
		System.out.println( c < d ); // ture
		System.out.println( c + 1 <= d ); // ture
		System.out.println( (++c != d) == (--c != d) ); 
		                  // == (++4 != 5  -> false)
		                  // 	(--5 != 5 ) -> true
					  	  //     false == true
						  // ->  flase
		
		System.out.println("---------------------------------");
		
		int temp = 723 ;
		
		System.out.println("temp는 짝수인가? " + (temp % 2 == 0) );
		System.out.println("temp는 짝수인가? " + (temp % 2 != 0) );
		
		System.out.println("temp는 홀수인가? " + (temp % 2 == 1) );
		System.out.println("temp는 홀수인가? " + (temp % 2 != 0) );
		
		System.out.println("temp는 3의 배수인가? " + (temp % 3 == 0) );
		System.out.println("temp는 4의 배수인가? " + (temp % 4 == 0) );
		System.out.println("temp는 5의 배수인가? " + (temp % 5 == 0) );
		
	}
	
	public void ex5() {
		
		// 논리 연산자 : &&(AND), ||(or)
		
		// &&(AND) 연산자 : 둘 다 true 일때만 ture, 나머진 false
		// 와, 그리고(~이고), ~면서, ~이면서, ~부터 ~까지, ~사이
		
		// ex) 사과와 바나나, 사과 그리고 바나나, 사과 이면서 바나나
		
		
		int a = 100;
		
		// a는 100 이상 이면서 짝수인가?
		
		System.out.println( a >= 100); // a는 100 이상?
		System.out.println( a % 2 == 0); // a는 짝수?
		System.out.println( a >= 100 && a % 1 == 0);
		
		int b = 5;
		
		// b는 1부터 10까지 숫자 범위 안에 포함되어 있는가?
		// (b는 1부터 10 사이의 숫자인가?)
		// (b는 1보다 크거나 같으면서 10보다 작거나 같은가?)
		
		
		System.out.println( 1 <= b ); // b는 1 이상인가?
		System.out.println( b <= 10  ); // b는 10 이하인가?
		System.out.println( 1 <= b && b <= 10);
		
		System.out.println("-------------------------------------------");
		
		// || (OR) 연산자 : 둘 다 false 이면 false, 나머지는 true (AND의 반대)
		// ~또는, ~거나, ~이거나
		
		int c = 10;
		
		// c는 10을 초과 했거나 짝수인가?
		
		System.out.println( ( c > 10) || c & 2 == 0);
	}
	
	
	
	
	
	
	
	
	
}
