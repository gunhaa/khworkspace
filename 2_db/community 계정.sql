alter session set "_oracle_script" = true;

create user community_hgh identified by community1234;

alter user community_hgh default tablespace system quota unlimited on system;

grant connect, resource, create view to community_hgh;


CREATE TABLE "MEMBER" (
   "MEMBER_NO"   NUMBER   PRIMARY KEY,
   "MEMBER_EMAIL"   VARCHAR2(50) NOT NULL,
   "MEMBER_PW"   VARCHAR2(30) NOT NULL,
   "MEMBER_NICK"   VARCHAR2(30) NOT NULL,
   "MEMBER_TEL"   CHAR(11) NOT NULL,
   "MEMBER_ADDR"   VARCHAR2(500),
   "PROFILE_IMG"   VARCHAR2(200),
   "ENROLL_DT"   DATE DEFAULT SYSDATE ,
   "SECESSION_FL"   CHAR(1)   DEFAULT 'N'
);


COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원 번호';
COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일(아이디)';
COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호';
COMMENT ON COLUMN "MEMBER"."MEMBER_NICK" IS '회원 닉네임(중복x)';
COMMENT ON COLUMN "MEMBER"."MEMBER_TEL" IS '전화번호(- 미포함)';
COMMENT ON COLUMN "MEMBER"."MEMBER_ADDR" IS '회원 주소';
COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '회원 프로필 이미지';
COMMENT ON COLUMN "MEMBER"."ENROLL_DT" IS '회원 가입일';
COMMENT ON COLUMN "MEMBER"."SECESSION_FL" IS '탈퇴여부(Y:탈퇴, N:미탈퇴)';


-- 회원 번호 시퀀스
CREATE SEQUENCE SEQ_MEMBER_NO;

INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL , 'user01@kh.or.kr' , 'pass01!', '유저일', '01012341234', '06234,,서울시 강남구 테헤란로 14길 6,,3층 G강의장', NULL, DEFAULT, DEFAULT);

COMMIT;

SELECT MEMBER_NO,MEMBER_EMAIL,MEMBER_NICK,MEMBER_TEL,MEMBER_ADDR,PROFILE_IMG, TO_CHAR(ENROLL_DT, 'YYYY-MM-DD HH24:MI:SS') AS ENROLL_DT FROM MEMBER WHERE MEMBER_EMAIL = 'user01@kh.or.kr' AND MEMBER_PW = 'pass01!' AND SECESSION_FL = 'N';
select * from MEMBER;


INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL , 'user01@kh.or.kr' , 'pass01!', '유저일', '01012341234', '06234,,서울시 강남구 테헤란로 14길 6,,3층 G강의장', NULL, DEFAULT, DEFAULT);

-- MEMBER TABLE 비밀번호 컬럼 크기 변경
 ALTER TABLE MEMBER MODIFY MEMBER_PW VARCHAR2(100);
 commit;
-- 암호화 된 비밀번호로 업데이트
UPDATE MEMBER SET
MEMBER_PW = 'W3IrMH/ObJRJBdEyaR1eSiIUt/6StziSDrP846kEIKGVEcMBCg53ErBU2u9bV7rVnsvZOzKA8hBXj1R/Su1NJQ=='
WHERE MEMBER_NO=24;
COMMIT;


UPDATE MEMBER SET MEMBER_NICK='1' , MEMBER_TEL='2' , MEMBER_ADDR='3' WHERE MEMBER_NO='24';
SELECT * FROM MEMBER;
ROLLBACK;
UPDATE MEMBER SET MEMBER_PW='암호화된 새 비밀번호' WHERE MEMBER_PW='암호화된 기존 비밀번호' AND MEMBER_NO='로그인한 회원 번호' ;

-- 이메일 중복 검사
-- 중복이면 1, 아니면 0
SELECT count(*) FROM MEMBER WHERE MEMBER_EMAIL='user@kh.com' AND SECESSION_FL='N';


-- 닉네임 중복검사 
-- 중복이면 1, 아니면 0 
SELECT count(*) FROM MEMBER WHERE MEMBER_NICK=? AND SECESSION_FL='N';

-- 이메일이 일치하는 회원 정보 조회

SELECT MEMBER_EMAIL, MEMBER_NICK, MEMBER_TEL, MEMBER_ADDR, TO_CHAR(ENROLL_DT, 'YYYY년 MM월 DD일') FROM MEMBER WHERE MEMBER_EMAIL='asd' AND SECESSION_FL='N';

-- 게시판 테이블 생성


DROP TABLE "BOARD_TYPE";
-- ""가 없으면 테이블명 ,컬럼명, 시퀀스명 등을 무조건 대문자로 저장
-- "" 가 있으면 대소문자 구분
-- 게시판 종류
CREATE TABLE "BOARD_TYPE" (
   "BOARD_CD"   NUMBER      PRIMARY KEY,
   "BOARD_NM"   VARCHAR2(50)      NOT NULL
);

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CD" IS '게시판 코드';

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NM" IS '게시판 이름';


DROP TABLE "BOARD";
-- 게시판(게시글 저장 테이블)
CREATE TABLE "BOARD" (
   "BOARD_NO"   NUMBER      NOT NULL,
   "BOARD_TITLE"   VARCHAR2(150)      NOT NULL,
   "BOARD_CONTENT"   VARCHAR2(4000)      NOT NULL,
   "CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "UPDATE_DT"   DATE      NULL,
   "READ_COUNT"   NUMBER   DEFAULT 0   NOT NULL,
   "BOARD_ST"   CHAR(1)   DEFAULT 'N'   NOT NULL,
   "MEMBER_NO"   NUMBER      NOT NULL,
   "BOARD_CD"   NUMBER      NOT NULL
);
COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(시퀀스)';

COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글 제목';

COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글 내용';

COMMENT ON COLUMN "BOARD"."CREATE_DT" IS '작성일';

COMMENT ON COLUMN "BOARD"."UPDATE_DT" IS '마지막 수정일';

COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';

COMMENT ON COLUMN "BOARD"."BOARD_ST" IS '게시글 상태(정상N, 삭제Y)';

COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '회원번호(시퀀스)';

COMMENT ON COLUMN "BOARD"."BOARD_CD" IS '게시판 코드';

-- BOARD 테이블에 제약 조건 추가

--BOARD_NO PK 추가
ALTER TABLE BOARD ADD PRIMARY KEY (BOARD_NO); -- 제약 조건 명 생략(SYS_XXXXX)

--BOARD_CD FK 추가
-- 제약 조건명 : FK_BOARD_CD

ALTER TABLE BOARD ADD CONSTRAINT "FK_BOARD_CD" FOREIGN KEY ("BOARD_CD") REFERENCES "BOARD_TYPE";

--BOARD_ST에 'n' / 'Y'만 들어오게 변경
ALTER TABLE BOARD ADD CONSTRAINT "CHK_BOARD_ST" CHECK ("BOARD_ST" IN ('N' , 'Y'));

--BOARD 테이블의 MEMBER_NO FK 연결 추가

ALTER TABLE BOARD ADD CONSTRAINT "FK_BOARD_MEMBER" FOREIGN KEY ("MEMBER_NO") REFERENCES MEMBER;
--BOARD_NO 용 시퀀스 만들기

CREATE SEQUENCE SEQ_BOARD_NO;

--BOARD_TYPE 데이터 삽입

INSERT INTO BOARD_TYPE VALUES(1, '공지사항');
INSERT INTO BOARD_TYPE VALUES(2, '자유 게시판');
INSERT INTO BOARD_TYPE VALUES(3, '질문 게시판');

--BOARD 테이블 샘플 데이터 삽입(PL/SQL)


BEGIN 
    FOR I IN 1..500 LOOP
    
    INSERT INTO BOARD 
    VALUES(SEQ_BOARD_NO.NEXTVAL, 
        SEQ_BOARD_NO.CURRVAL || '번째 게시글' , 
        SEQ_BOARD_NO.CURRVAL || '번째 게시글 내용입니다.' ,
        DEFAULT ,
        DEFAULT ,
        DEFAULT ,
        DEFAULT , 24 , 3
    );
    END LOOP;
END;
/


SELECT * FROM MEMBER;
SELECT COUNT(*) FROM BOARD;
-- 공지사항
SELECT COUNT(*) FROM BOARD WHERE BOARD_CD =1;
-- 자유 게시판
SELECT COUNT(*) FROM BOARD WHERE BOARD_CD =2;
-- 질문 게시판
SELECT COUNT(*) FROM BOARD WHERE BOARD_CD =3;

COMMIT;

--게시판 이름 조회

SELECT BOARD_NM FROM BOARD_TYPE WHERE BOARD_CD = 2;

-- 특정 게시판에서 일정한 범위의 목록 조회
SELECT * FROM (

SELECT ROWNUM RNUM, A.* FROM (

    SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NICK, TO_CHAR(CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT FROM BOARD JOIN MEMBER USING(MEMBER_NO) WHERE BOARD_CD=2 AND BOARD_ST ='N' ORDER BY BOARD_NO DESC
)A

)
WHERE RNUM BETWEEN 1 AND 11;

-- 게시판 이미지 테이블 생성

CREATE TABLE "BOARD_IMG" (
   "IMG_NO"   NUMBER PRIMARY KEY,
   "IMG_RENAME"   VARCHAR2(500) NOT NULL,
   "IMG_ORIGINAL"   VARCHAR2(500) NOT NULL,
   "IMG_LEVEL"   NUMBER NOT NULL,
   "BOARD_NO" NUMBER REFERENCES BOARD
);
-- 위에 적용시키면 필요없음
ALTER TABLE BOARD ADD CONSTRAINT "FK_BOARD_NO" FOREIGN KEY ("BOARD_NO") REFERENCES BOARD;

COMMENT ON COLUMN "BOARD_IMG"."IMG_NO" IS '이미지 번호';

COMMENT ON COLUMN "BOARD_IMG"."IMG_RENAME" IS '이미지 저장경로+변경명';

COMMENT ON COLUMN "BOARD_IMG"."IMG_ORIGINAL" IS '이미지 원본명';

COMMENT ON COLUMN "BOARD_IMG"."IMG_LEVEL" IS '이미지 위치 지정 번호';

COMMENT ON COLUMN "BOARD_IMG"."BOARD_NO" IS '게시글 번호';


-- 이미지 번호 시퀀스 생성

CREATE SEQUENCE SEQ_IMG_NO NOCACHE;

-- 샘플 데이터
INSERT INTO BOARD_IMG VALUES (
    SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample1.jpg', 'cat1.jpg', 0, 500
);
INSERT INTO BOARD_IMG VALUES (
    SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample2.jpg', 'cat2.jpg', 0, 500
);
INSERT INTO BOARD_IMG VALUES (
    SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample3.jpg', 'cat3.jpg', 0, 500
);
INSERT INTO BOARD_IMG VALUES (
    SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample4.jpg', 'cat4.jpg', 0, 500
);
INSERT INTO BOARD_IMG VALUES (
    SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample5.jpg', 'cat5.jpg', 0, 500
);

select * from board_img;
commit;
select * from member;
--게시글 상세 조회

SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CREATE_DT, TO_CHAR(UPDATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') UPDATE_DT , READ_COUNT, MEMBER_NICK, PROFILE_IMG, MEMBER_NO, BOARD_NM FROM BOARD JOIN MEMBER USING (MEMBER_NO) JOIN BOARD_TYPE USING (BOARD_CD) WHERE BOARD_NO = 500 AND BOARD_ST = 'N';

-- 특정 게시글에 첨부된 이미지 목록 조회

SELECT * FROM BOARD_IMG WHERE BOARD_NO =500 ORDER BY IMG_LEVEL;


-- 댓글 테이블 생성
CREATE TABLE REPLY(
  REPLY_NO NUMBER PRIMARY KEY,
  REPLY_CONTENT VARCHAR2(1000) NOT NULL,
  REPLY_ST CHAR(1) DEFAULT 'N' CHECK (REPLY_ST IN ('Y', 'N')),
  CREATE_DT DATE DEFAULT SYSDATE,
  MEMBER_NO NUMBER REFERENCES MEMBER NOT NULL,
  BOARD_NO NUMBER REFERENCES BOARD NOT NULL
);

COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글 번호(PK)';
COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '댓글  내용';
COMMENT ON COLUMN REPLY.REPLY_ST IS '댓글 상태(Y:정상, N:삭제)';
COMMENT ON COLUMN REPLY.CREATE_DT IS '댓글 작성일';
COMMENT ON COLUMN REPLY.MEMBER_NO IS '댓글 작성 회원 번호';
COMMENT ON COLUMN REPLY.BOARD_NO IS '댓글이 작성된 게시글 번호';

-- 댓글 번호 시퀀스
CREATE SEQUENCE SEQ_RNO NOCACHE;

select * from reply;

-- 가장 최근 게시글에 댓글 샘플 데이터 삽입
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '댓글 테스트1', DEFAULT, DEFAULT, 24, 500);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '댓글 테스트2', DEFAULT, DEFAULT, 24, 500);

COMMIT;

SELECT REPLY_NO, REPLY_CONTENT, TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS CREATE_DT , MEMBER_NICK, BOARD_NO, MEMBER_NO,PROFILE_IMG FROM REPLY JOIN MEMBER USING (MEMBER_NO) WHERE BOARD_NO=500 AND REPLY_ST='N' ORDER BY REPLY_NO;
--INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, 내용, DEFAULT, DEFAULT, 회원번호, 게시글번호);
SELECT * FROM REPLY;
-- 삭제 처리 SQL
UPDATE REPLY SET REPLY_ST='Y' WHERE REPLY_NO=1;
ROLLBACK;


-- 댓글 수정
UPDATE REPLY SET REPLY_CONTENT = 'ASD' WHERE REPLY_NO = '3';
ROLLBACK;

-- 프로필 이미지 변경
UPDATE MEMBER SET PROFILE_IMG = ? WHERE MEMBER_NO = ?;

-- 다음 게시글 번호 조회
SELECT COUNT(BOARD_NO)+1 FROM BOARD;
SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL;

SELECT * FROM BOARD;

INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL , 'user01@kh.or.kr' , 'pass01!', '유저일', '01012341234', '06234,,서울시 강남구 테헤란로 14길 6,,3층 G강의장', NULL, DEFAULT, DEFAULT);

INSERT INTO BOARD VALUES (다음번호, 제목 , 내용 , DEFAULT, DEFAULT, DEFAULT, DEFAULT, 회원번호, 게시판번호);

SELECT * FROM BOARD_IMG;

INSERT INTO BOARD_IMG VALUES (이미지 번호, 이미지 경로, 오리지널 이름 , 이미지 레벨,게시판번호);

-- 게시글 목록 조회(썸네일 추가)
		SELECT * FROM (
SELECT ROWNUM RNUM, A.* FROM (
        SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NICK, TO_CHAR(CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT,READ_COUNT ,
        (SELECT IMG_RENAME FROM BOARD_IMG WHERE IMG_LEVEL=0 AND BOARD_IMG.BOARD_NO =BOARD.BOARD_NO) THUMBNAIL
        FROM BOARD JOIN MEMBER USING(MEMBER_NO) WHERE BOARD_CD= 1 AND BOARD_ST ='N' ORDER BY BOARD_NO DESC
    )A
)
WHERE RNUM BETWEEN 1 AND 10;

-- 썸네일 조회
SELECT IMG_RENAME FROM BOARD_IMG WHERE IMG_LEVEL=0 AND BOARD_NO =500;

select * from board;

-- 게시글 삭제
UPDATE BOARD SET BOARD_ST='Y' WHERE BOARD_NO=1;

SELECT * 